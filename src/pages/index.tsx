import { type NextPage } from "next";
import Head from "next/head";
import { RootLayout } from "@/components/layouts/root-layout";
import Image from "next/image";
import { images } from "@/constants/images";
import type { StandardGetServerSidePropsWithPrefetch } from "@/types/utility-types";
import { createTRPCServerHelpers } from "@/server/trpc/server-helpers";
import { useSession } from "@/hooks/use-session";
import { Button } from "@/packages/ui";
import Link from "next/link";

export const getServerSideProps = (async (context) => {
	const trpcClient = await createTRPCServerHelpers(context);

	await trpcClient.auth.getSession.prefetch();

	return {
		props: {
			trpcState: trpcClient.dehydrate(),
		},
	};
}) satisfies StandardGetServerSidePropsWithPrefetch;

const Home: NextPage = () => {
	const { status: sessionStatus } = useSession();

	return (
		<>
			<Head>
				<title>Create T3 App</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<RootLayout className="center flex-col">
				<div className="flex flex-col items-center">
					<div className="mb-16 flex flex-col items-center">
						<Image
							src={images.logo}
							alt="Bad Notes"
							width={600}
							height={200}
							className="mb-8"
						/>
						<p className="font-title text-2xl font-bold text-primary">
							Take Notes, Poorly
						</p>
					</div>

					{sessionStatus === "unauthenticated" && (
						<Link passHref legacyBehavior href="/sign-in">
							<Button colorScheme="primary">Sign Up</Button>
						</Link>
					)}
					{sessionStatus === "authenticated" && (
						<Link passHref legacyBehavior href="/notes">
							<Button colorScheme="primary">Go To Notes</Button>
						</Link>
					)}
				</div>
			</RootLayout>
		</>
	);
};

export default Home;
